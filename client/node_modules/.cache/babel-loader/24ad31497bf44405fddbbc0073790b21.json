{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/components/quiz/quizStructure/quizStructure.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport './quizStructure.css';\nimport { Link } from 'react-router-dom';\nimport Back from \"../../backButton/back\";\nimport HintButton from '../assets/hint-button.png';\nimport UserIcon from \"../assets/user-icon.svg\";\nimport CloseButton from '../assets/16/icon.png';\nimport BackdropBubble from '../assets/backdrop-bubble.png'; // Question Text/Answer Button Component\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hintPopup: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault(); //Prevents full refresh\n\n    this.props.onChoiceChange(e.target.value);\n  }\n\n  toggleHintPopup() {\n    this.setState({\n      hintPopup: !this.state.hintPopup\n    });\n    console.log(this.state.hintPopup);\n  }\n\n  render() {\n    const question = this.props.question; // Variable set to equal question from props\n\n    const isHintShown = this.state.hintPopup;\n\n    const HintPopup = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hint-popup-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"h-p-box-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpb-inner-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpb-close-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => this.toggleHintPopup(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: CloseButton,\n        alt: \"Close Menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 37\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpb-body-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpdb-inner-container hpdb-title-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, \"HINT TIME!\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpdb-inner-container hpdb-image-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpdbi-bubble\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: BackdropBubble,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpdbi-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: question.hint.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      }))), question.hint.text !== null && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpdb-inner-container hpdb-description-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }\n      }, question.hint.text), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hpdb-inner-container hpdb-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"hpdb-button\",\n        onClick: () => this.toggleHintPopup(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 37\n        }\n      }, \"OK\"))))));\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, isHintShown === true && /*#__PURE__*/React.createElement(HintPopup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, question.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answer-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, question.choices.map(choice => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.handleChange,\n        name: question.id,\n        value: choice.id,\n        className: \"answer-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }, choice.text);\n    }), question.hint !== null && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"hint-btn\",\n      onClick: () => this.toggleHintPopup(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: HintButton,\n      alt: \"Hint Button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nclass Results extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.overallScore = () => {\n      this.setState((prevState, props) => ({\n        overallScore: prevState.overallScore + props.score\n      }));\n    };\n\n    this.handleSubmit = event => {\n      const payload = {\n        score: this.props.score\n      };\n      axios({\n        url: 'api/save',\n        method: 'POST',\n        data: payload\n      }).then(() => {\n        console.log('Data sent to server');\n      }).catch(() => {\n        console.log('ISE: Error sending data to server');\n      });\n    };\n\n    this.state = {\n      overallScore: 0,\n      usersDetails: ''\n    };\n  }\n\n  componentDidMount() {\n    this.overallScore();\n    axios.get('api/').then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error, 'Internal Server Error');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-absolute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: UserIcon,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, \"+\", this.state.overallScore, \" points!\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, \"Congratulations!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-cont results-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/game-menu\",\n      className: \"quiz-return-btn\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, \"OK\")))));\n  }\n\n} // End of Results Component\n// Final Quiz Format Section\n\n\nexport default class QuizFormat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      current: 1\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(choice) {\n    this.setState((prevState, props) => ({\n      current: prevState.current + 1,\n      score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 50 : prevState.score\n    }));\n  }\n\n  render() {\n    const questions = this.props.questions;\n    const randomQuestion = questions[Math.floor(Math.random() * questions.length)];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quiz-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Back, {\n      id: \"backButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }), this.state.current >= 2 && /*#__PURE__*/React.createElement(Results, {\n      total: questions.length,\n      score: this.state.score,\n      overallScore: this.state.overallScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }), this.state.current <= 1 && /*#__PURE__*/React.createElement(Question, {\n      question: randomQuestion,\n      onChoiceChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }));\n  }\n\n} // End of Final Quiz Format Section","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/components/quiz/quizStructure/quizStructure.js"],"names":["React","Component","useState","axios","Link","Back","HintButton","CloseButton","BackdropBubble","Question","constructor","props","state","hintPopup","handleChange","bind","e","preventDefault","onChoiceChange","target","value","toggleHintPopup","setState","console","log","render","question","isHintShown","HintPopup","hint","image","text","choices","map","choice","id","Results","overallScore","prevState","score","handleSubmit","event","payload","url","method","data","then","catch","usersDetails","componentDidMount","get","res","error","UserIcon","QuizFormat","current","questions","correct","randomQuestion","Math","floor","random","length"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\nimport axios from 'axios';\nimport './quizStructure.css';\nimport { Link } from 'react-router-dom';\n\nimport Back from \"../../backButton/back\"; import HintButton from '../assets/hint-button.png'; import UserIcon from '../assets/user-icon.svg';\nimport CloseButton from '../assets/16/icon.png'; import BackdropBubble from '../assets/backdrop-bubble.png';\n\n// Question Text/Answer Button Component\nclass Question extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hintPopup: false,\n        }\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        e.preventDefault(); //Prevents full refresh\n        this.props.onChoiceChange(e.target.value);\n    }\n\n    toggleHintPopup() {\n        this.setState({\n            hintPopup: !this.state.hintPopup\n        })\n        console.log(this.state.hintPopup)\n    }\n\n    render(){\n        const question = this.props.question; // Variable set to equal question from props\n        const isHintShown = this.state.hintPopup;\n\n        const HintPopup = () => {\n            return(\n                <div className=\"hint-popup-container\">\n                    <div className=\"h-p-box-container\">\n                        <div className=\"hpb-inner-container\">\n\n                            {/* Close Button */}\n                            <div className=\"hpb-close-button\">\n                                <button onClick={() => this.toggleHintPopup()}>\n                                    <img src={CloseButton} alt=\"Close Menu\"/>\n                                </button>\n                            </div>\n\n                            {/* Body Section */}\n                            <div className=\"hpb-body-container\">\n\n                                {/* Title */}\n                                <div className=\"hpdb-inner-container hpdb-title-container\">\n                                    HINT TIME!\n                                </div>\n\n                                {/* Image */}\n                                <div className=\"hpdb-inner-container hpdb-image-container\">\n\n                                    <div className=\"hpdbi-bubble\">\n                                        <img src={BackdropBubble} />\n                                    </div>\n\n                                    <div className=\"hpdbi-image\">\n                                        <img src={question.hint.image} />\n                                    </div>\n\n                                </div>\n\n                                {/* Description */}\n                                {\n                                    question.hint.text !== null &&\n                                    <div className=\"hpdb-inner-container hpdb-description-container\">\n                                        { question.hint.text }\n                                    </div>\n                                }\n\n\n                                {/* Button */}\n                                <div className=\"hpdb-inner-container hpdb-button-container\">\n                                    <button className=\"hpdb-button\" onClick={() => this.toggleHintPopup()}>\n                                        OK\n                                    </button>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n        return(\n            <div>\n\n                {/* Hint Popup*/}\n                {\n                    isHintShown === true &&\n                    <HintPopup/>\n                }\n\n                {/* Question Layout */}\n                <div className=\"question-component\">\n                    {question.text}\n                </div>\n                <div className=\"answer-container\">\n                    { question.choices.map(choice => {\n                        return(\n                                <button\n                                    type=\"submit\"\n                                    onClick={this.handleChange}\n                                    name={question.id}\n                                    value={choice.id}\n                                    className=\"answer-btn\"\n                                >\n                                    {choice.text}\n                                </button>\n                        )\n                    })}\n                    {\n                        question.hint !== null &&\n                    <button className=\"hint-btn\" onClick={() => this.toggleHintPopup()}>\n                        <img src={HintButton} alt=\"Hint Button\"/>\n                    </button>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass Results extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            overallScore: 0,\n            usersDetails: ''\n        }\n    }\n\n    overallScore = () => {\n        this.setState((prevState, props) => ({\n            overallScore: (prevState.overallScore + props.score)\n        }))\n    }\n\n    handleSubmit = (event) => {\n\n        const payload = {\n            score: this.props.score\n        }\n\n        axios({\n            url: 'api/save',\n            method: 'POST',\n            data: payload\n        })\n            .then(() => {\n                console.log('Data sent to server')\n            })\n            .catch(() => {\n                console.log('ISE: Error sending data to server')\n            })\n    }\n\n    componentDidMount () {\n        this.overallScore()\n\n        axios.get('api/')\n            .then(res => {\n                console.log(res.data)\n            })\n            .catch(error => {\n                console.log(error, 'Internal Server Error')\n            })\n    }\n\n    render(){\n        return(\n            <div className=\"results-absolute\">\n                <div className=\"results-container\">\n                    <div className=\"results-cont results-img\">\n                        <img src={UserIcon} alt=\"\"/>\n                    </div>\n\n                    <div className=\"results-cont results-text\">\n                        <h3>+{this.state.overallScore} points!</h3>\n                        <h4>Congratulations!</h4>\n                    </div>\n\n                    <div className=\"results-cont results-link\">\n                        <Link\n                            to=\"/game-menu\"\n                            className=\"quiz-return-btn\"\n                            onClick={this.handleSubmit}\n                        >\n                            <h4>OK</h4>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n// End of Results Component\n\n// Final Quiz Format Section\nexport default class QuizFormat extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            score: 0,\n            current: 1,\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(choice){\n        this.setState((prevState, props) => ({\n            current: prevState.current + 1,\n            score: choice === props.questions[prevState.current - 1].correct ? prevState.score + 50 : prevState.score,\n        }));\n    }\n\n    render () {\n        const questions = this.props.questions;\n        const randomQuestion = questions[Math.floor(Math.random() * questions.length )]\n\n        return (\n            <div className=\"quiz-container\">\n                <Back id=\"backButton\"/>\n                {this.state.current >= 2 &&\n                    <Results\n                        total={questions.length}\n                        score={this.state.score}\n                        overallScore={this.state.overallScore}\n                    />\n                }\n\n\n                {this.state.current <= 1 &&\n                    <Question\n                        question={randomQuestion}\n                        onChoiceChange={this.handleChange}\n                    />\n                }\n\n            </div>\n        );\n    }\n}\n\n\n// End of Final Quiz Format Section\n"]},"metadata":{},"sourceType":"module"}