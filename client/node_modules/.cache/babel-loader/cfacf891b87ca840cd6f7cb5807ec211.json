{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/aero-frontend/src/screens/wheelSpin/wheelSpin.js\";\n// import React, { useState } from 'react';\n// import { Wheel } from \"react-custom-roulette\";\n//\n// const data = [\n//     { option: '0' },\n//     { option: '1' },\n//     { option: '2' },\n// ]\n//\n// export default function WheelSpin() {\n//     const [mustSpin, setMustSpin] = useState(false);\n//     const [prizeNumber, setPrizeNumber] = useState(0);\n//\n//     const handleSpinClick = () => {\n//         const newPrizeNumber = Math.floor(Math.random() * data.length)\n//         setPrizeNumber(newPrizeNumber);\n//         setMustSpin(true);\n//     }\n//\n//     return (\n//         <>\n//\n//             <Wheel\n//                 mustStartSpinning={mustSpin}\n//                 prizeNumber={prizeNumber}\n//                 data={data}\n//                 onStopSpinning={() => {\n//                     setMustSpin(false)\n//                 }}\n//             />\n//             <button onClick={handleSpinClick}>\n//                 SPIN\n//             </button>\n//\n//         </>\n//     )\n//\n// }\nimport React, { Component } from 'react';\nimport WheelComponent from \"react-wheel-of-prizes\";\nimport 'react-wheel-of-prizes/dist/index.css';\n\nclass WheelSpin extends Component {\n  constructor(props) {\n    super(props);\n    this.segments = ['30', '60', '100', '150', '200', '250'];\n    this.segmentColors = [\"rgba(0,0,0,0.6)\", \"#F0CF50\", \"#815CD1\", \"#3DA5E0\", \"#34A24F\", \"#F9AA1F\", \"#EC3F3F\", \"#FF9000\"];\n  }\n\n  render() {\n    const onFinish = winner => {\n      console.log(winner);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(WheelComponent, {\n      segments: this.segments,\n      segColors: this.segmentColors,\n      winningSegment: 30,\n      onFinished: winner => onFinish(winner),\n      primaryColor: \"black\",\n      contrastColor: \"white\",\n      buttonText: \"Spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default WheelSpin;","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/aero-frontend/src/screens/wheelSpin/wheelSpin.js"],"names":["React","Component","WheelComponent","WheelSpin","constructor","props","segments","segmentColors","render","onFinish","winner","console","log"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAO,sCAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAE9BG,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,QAAL,GAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB,KAApB,EAA2B,KAA3B,EAAkC,KAAlC,CAAhB;AACA,SAAKC,aAAL,GAAqB,CAAE,iBAAF,EAAqB,SAArB,EAAgC,SAAhC,EAA2C,SAA3C,EAAsD,SAAtD,EAAiE,SAAjE,EAA4E,SAA5E,EAAuF,SAAvF,CAArB;AAEH;;AAGDC,EAAAA,MAAM,GAAI;AACN,UAAMC,QAAQ,GAAIC,MAAD,IAAY;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KAFD;;AAGA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AACI,MAAA,QAAQ,EAAE,KAAKJ,QADnB;AAEI,MAAA,SAAS,EAAE,KAAKC,aAFpB;AAGI,MAAA,cAAc,EAAE,EAHpB;AAII,MAAA,UAAU,EAAGG,MAAD,IAAYD,QAAQ,CAACC,MAAD,CAJpC;AAKI,MAAA,YAAY,EAAC,OALjB;AAMI,MAAA,aAAa,EAAC,OANlB;AAOI,MAAA,UAAU,EAAC,MAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAaH;;AA5B6B;;AA+BlC,eAAeP,SAAf","sourcesContent":["// import React, { useState } from 'react';\n// import { Wheel } from \"react-custom-roulette\";\n//\n// const data = [\n//     { option: '0' },\n//     { option: '1' },\n//     { option: '2' },\n// ]\n//\n// export default function WheelSpin() {\n//     const [mustSpin, setMustSpin] = useState(false);\n//     const [prizeNumber, setPrizeNumber] = useState(0);\n//\n//     const handleSpinClick = () => {\n//         const newPrizeNumber = Math.floor(Math.random() * data.length)\n//         setPrizeNumber(newPrizeNumber);\n//         setMustSpin(true);\n//     }\n//\n//     return (\n//         <>\n//\n//             <Wheel\n//                 mustStartSpinning={mustSpin}\n//                 prizeNumber={prizeNumber}\n//                 data={data}\n//                 onStopSpinning={() => {\n//                     setMustSpin(false)\n//                 }}\n//             />\n//             <button onClick={handleSpinClick}>\n//                 SPIN\n//             </button>\n//\n//         </>\n//     )\n//\n// }\n\n\nimport React, {Component} from 'react';\nimport WheelComponent from \"react-wheel-of-prizes\";\nimport 'react-wheel-of-prizes/dist/index.css';\n\nclass WheelSpin extends Component {\n\n    constructor (props) {\n        super(props);\n\n        this.segments = ['30', '60', '100', '150', '200', '250']\n        this.segmentColors = [ \"rgba(0,0,0,0.6)\", \"#F0CF50\", \"#815CD1\", \"#3DA5E0\", \"#34A24F\", \"#F9AA1F\", \"#EC3F3F\", \"#FF9000\", ]\n\n    }\n\n\n    render () {\n        const onFinish = (winner) => {\n            console.log(winner)\n        }\n        return (\n            <div>\n                <WheelComponent\n                    segments={this.segments}\n                    segColors={this.segmentColors}\n                    winningSegment={30}\n                    onFinished={(winner) => onFinish(winner)}\n                    primaryColor='black'\n                    contrastColor='white'\n                    buttonText='Spin'\n                />\n            </div>\n        );\n    }\n}\n\nexport default WheelSpin;\n"]},"metadata":{},"sourceType":"module"}